[project]
name = "pubtools-sign"
description = "Collection of tools producing signed artifacts"
readme = "README.rst"
requires-python = ">=3.7"
version = "0.0.5"

classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

authors = [
    { name = "Jindrich Luza", email = "jluza@redhat.com" }
]
dependencies = [
    "click",
    "requests",
    "piny",
    "python-qpid-proton",
    "monotonic",
    "marshmallow",
    "pyOpenSSL",
    "typing_extensions",
    "ansible-core",
    "pubtools>=1.4.0",
    "opentelemetry-api==1.20.0",
    "opentelemetry-sdk==1.20.0",
    "opentelemetry-exporter-otlp==1.20.0"
]

[tool.setuptools.packages.find]
where = ["src"]  # list of folders that contain the packages (["."] by default)

[tool.hatch.build.targets.wheel]
packages = ["src/pubtools"]

[project.optional-dependencies]
dev = [
    "tox",
    "pytest"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
pubtools-sign-msg-clear-sign = "pubtools.sign.signers.msgsigner:msg_clear_sign_main"
pubtools-sign-msg-container-sign = "pubtools.sign.signers.msgsigner:msg_container_sign_main"
pubtools-sign-cosign-container-sign = "pubtools.sign.signers.cosignsigner:cosign_container_sign_main"
pubtools-sign = "pubtools.sign.bundle:cli"

[project.entry-points.modules]
pubtools-sign-msg-clear-sign = "pubtools.sign.signers.msgsigner:msg_clear_sign"
pubtools-sign-msg-container-sign = "pubtools.sign.signers.msgsigner:msg_container_sign"
pubtools-sign-cosign-signature-list = "pubtools.sign.signers.cosignsigner:cosign_list_existing_signatures"
pubtools-sign-cosign-container-sign = "pubtools.sign.signers.cosignsigner:cosign_container_sign"
